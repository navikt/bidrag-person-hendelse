application:
  name: bidrag-person-hendelse

server:
  servlet:
    context-path: /
    encoding.charset: UTF-8
  port: 8090
spring:
  main:
    allow-bean-definition-overriding: true
  autoconfigure.exclude: org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
  main.banner-mode: "off"
  cloud.gcp.sql:
    database-name: ${DB_DATABASE}
    instance-connection-name: ${GCP_TEAM_PROJECT_ID}:europe-north1:${NAIS_APP_NAME}
  datasource:
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}?user=${DB_USERNAME}&password=${DB_PASSWORD}
    hikari:
      idle-timeout: 10001
      max-lifetime: 30001
      connectionTimeout: 1000
      maximum-pool-size: 10
      minimum-idle: 1
  flyway:
    enabled: true
    locations: classpath:/db/migration
  jpa:
    hibernate.connection.provider_class: org.hibernate.hikaricp.internal.HikariCPConnectionProvider
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      schema.registry.url: ${KAFKA_SCHEMA_REGISTRY}
      basic.auth.credentials.source: USER_INFO
      basic.auth.user.info: ${KAFKA_SCHEMA_REGISTRY_USER}:${KAFKA_SCHEMA_REGISTRY_PASSWORD}
      security:
        protocol: SSL
      ssl:
        keystore:
          type: PKCS12
          location: ${KAFKA_KEYSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
        truststore:
          type: PKCS12
          location: ${KAFKA_TRUSTSTORE_PATH}
          password: ${KAFKA_CREDSTORE_PASSWORD}
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      max-poll-records: 1
      auto-offset-reset: earliest
      enable-auto-commit: false
  jackson:
    deserialization:
      # Allerede satt i felles, setter her slik at det gjelder for rest-params også
      FAIL_ON_UNKNOWN_PROPERTIES: false

logging:
  config: "classpath:logback-spring.xml"

retry.backoff.delay: 5000

funksjonsbrytere:
  enabled: true
  unleash:
    uri: https://unleash.nais.io/api/
    cluster: ${NAIS_CLUSTER_NAME}
    applicationName: ${NAIS_APP_NAME}

prosessering:
  queue:
    capacity: 10
  pool:
    size: 2

kjøreplan:
  overføre_hendelser: ${KJØREPLAN_OVERFØRE_HENDELSER}
  slette_hendelser: ${KJØREPLAN_SLETTE_HENDELSER}

management:
  endpoint.health.show-details: always
  endpoints.web:
    exposure.include: info, health, metrics, prometheus
    base-path: "/internal"
  health:
    db:
      enabled: true
  prometheus.metrics.export.enabled: true

egenskaper:
  generelt:
    antallMinutterForsinketVideresending: 120
    antallDagerLevetidForUtgaatteHendelser: ${DAGER_LEVETID_UTGÅTTE_HENDELSER}

  wmq:
    host: ${WMQ_HOST}
    port: ${WMQ_PORT}
    channel: ${WMQ_CHANNEL}
    queue-manager: ${WMQ_QUEUEMANAGER}
    username: srvbidrag-person-hen
    password: ${PASSORD_SRVBIDRAG_PERSON_HEN}
    timeout: ${WMQ_TIMEOUT}
    application-name: ${WMQ_APPLICATION_NAME}
    queueNameLivshendelser: ${WMQ_QUEUE_NAME_LIVSHENDELSER}

