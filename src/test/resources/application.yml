NAIS_APP_NAME: bidrag-person-hendelse
WMQ_HOST: host.docker.internal
WMQ_PORT: 1414
WMQ_CHANNEL: DEV.APP.SVRCONN
WMQ_QUEUEMANAGER: QM1
WMQ_QUEUE_NAME_LIVSHENDELSER: DEV.QUEUE.1
WMQ_TIMEOUT: 15000
WMQ_APPLICATION_NAME: bidrag-person-hendelse
PASSORD_SRVBIDRAG_PERSON_HEN: passw0rd
KAFKA_BROKERS: http://localhost:9093
OVERFØRE_HENDELSER_KJØREPLAN: "0 0/3 * * * ?"
OVERFØRE_HENDELSER_LÅS_MIN: PT2M
OVERFØRE_HENDELSER_LÅS_MAX: PT10M
PUBLISERE_PERSONHENDELSER_KJØREPLAN: "0 0/15 * * * ?"
PUBLISERE_PERSONHENDELSER_LÅS_MIN: PT2M
PUBLISERE_PERSONHENDELSER_LÅS_MAX: PT10M
SLETTE_HENDELSER_KJØREPLAN: "0 0 * * * ?"
SLETTE_HENDELSER_LÅS_MIN: PT30S
SLETTE_HENDELSER_LÅS_MAX: PT1M
DAGER_LEVETID_UTGÅTTE_HENDELSER: 2
BIDRAG_PERSON_URL: http://localhost
AZURE_OPENID_CONFIG_TOKEN_ENDPOINT: http://localhost:${mock-oauth2-server.port}/aad/token
ANTALL_TIMER_SIDEN_FORRIGE_PUBLISERING: -1

spring:
  config.activate.on-profile: lokal-h2, lokal-postgres, test
  cloud.gcp:
    secretmanager.enabled: false
    sql.enabled: false
  main.allow-bean-definition-overriding: true
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}
    properties:
      security.protocol: SASL_PLAINTEXT
      sasl:
        jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="igroup" password="itest";
      schema.registry.url: http://localhost:8081
    consumer:
      group-id: srvc01

no.nav.security.jwt:
  dont-propagate-bearertoken: true
  client.registration:
    bidrag-person:
      token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
      grant-type: client_credentials
      scope: api://${BIDRAG_PERSON_SCOPE}/.default
      authentication:
        client-id: ${AZURE_APP_CLIENT_ID}
        client-secret: ${AZURE_APP_CLIENT_SECRET}
        client-auth-method: client_secret_basic

funksjonsbrytere:
  kafka.enabled: false
  enabled: false
  unleash:
    uri: http://dummy/api/
    cluster: localhost
    applicationName: bidrag-person-hendelse

overføre_hendelser:
  kjøreplan: ${OVERFØRE_HENDELSER_KJØREPLAN}
  lås:
    min: ${OVERFØRE_HENDELSER_LÅS_MIN}
    max: ${OVERFØRE_HENDELSER_LÅS_MAX}
publisere_personhendelser:
  kjøreplan: ${PUBLISERE_PERSONHENDELSER_KJØREPLAN}
  lås:
    min: ${PUBLISERE_PERSONHENDELSER_LÅS_MIN}
    max: ${PUBLISERE_PERSONHENDELSER_LÅS_MAX}
slette_hendelser:
  kjøreplan: ${SLETTE_HENDELSER_KJØREPLAN}
  lås:
    min: ${SLETTE_HENDELSER_LÅS_MIN}
    max: ${SLETTE_HENDELSER_LÅS_MAX}

egenskaper:
  generelt:
    antall-minutter-forsinket-videresending: 120
    antallDagerLevetidForUtgåtteHendelser: ${DAGER_LEVETID_UTGÅTTE_HENDELSER}
    maksAntallMeldingerSomOverfoeresTilBisysOmGangen: 1
  integrasjon:
    wmq:
      host: ${WMQ_HOST}
      port: ${WMQ_PORT}
      channel: ${WMQ_CHANNEL}
      queue-manager: ${WMQ_QUEUEMANAGER}
      username: srvbidrag-person-hen
      password: ${PASSORD_SRVBIDRAG_PERSON_HEN}
      timeout: ${WMQ_TIMEOUT}
      application-name: ${WMQ_APPLICATION_NAME}
      queueNameLivshendelser: ${WMQ_QUEUE_NAME_LIVSHENDELSER}
    bidrag-person:
      url: ${BIDRAG_PERSON_URL}

---
spring:
  config.activate.on-profile: lokal-h2, test

  ### H2 ###
  flyway:
    enabled: true
    locations: classpath:db/test
  spring:
    datasource:
      datasource.type: com.zaxxer.hikari.HikariDataSource
      initialization-mode: always
      driverClassName: org.h2.Driver
      url: jdbc:h2:mem:default
  data.jpa.repositories.bootstrap-mode: default
  h2.console.enabled: true
  jpa:
    hibernate.ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
---
spring:
  config.activate.on-profile: lokal-postgres
  datasource:
    url: jdbc:postgresql://localhost:5432/personhendelse
    databaseName: personhendelse
    portNumber: 5432
    serverName: localhost
    username: postgres
    password: test
    hikari:
      idle-timeout: 10001
      max-lifetime: 30001
      connectionTimeout: 1000
      maximum-pool-size: 10
      minimum-idle: 1
  flyway:
    enabled: true
    locations: classpath:/db/migration
  jpa:
    hibernate.connection.provider_class: org.hibernate.hikaricp.internal.HikariCPConnectionProvider
    properties:
      hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect

